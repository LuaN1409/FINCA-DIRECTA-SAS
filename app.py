"""
Sistema Finca Directa SAS - Launcher Principal
Versi√≥n: 3.0 - Con instalaci√≥n autom√°tica de dependencias
Descripci√≥n: Ejecuta la aplicaci√≥n con instalaci√≥n autom√°tica de dependencias para funcionar en cualquier PC
"""

import tkinter as tk
from tkinter import messagebox
import sys
import os
import subprocess
import importlib

def instalar_dependencia(paquete):
    """Instalar una dependencia usando pip"""
    try:
        print(f"üì¶ Instalando {paquete}...")
        subprocess.check_call([sys.executable, "-m", "pip", "install", paquete])
        print(f"‚úÖ {paquete} instalado correctamente")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå Error al instalar {paquete}: {e}")
        return False

def verificar_e_instalar_dependencias():
    """Verificar e instalar dependencias autom√°ticamente"""
    dependencias = {
        'pandas': 'pandas>=1.5.0',
        'openpyxl': 'openpyxl>=3.0.0', 
        'ttkbootstrap': 'ttkbootstrap>=1.10.0'
    }
    
    dependencias_faltantes = []
    
    print("üîç Verificando dependencias...")
    
    for modulo, paquete in dependencias.items():
        try:
            importlib.import_module(modulo)
            print(f"‚úÖ {modulo}: Disponible")
        except ImportError:
            print(f"‚ùå {modulo}: No encontrado")
            dependencias_faltantes.append(paquete)
    
    if dependencias_faltantes:
        print(f"üìã Dependencias faltantes: {len(dependencias_faltantes)}")
        print("üöÄ Instalando dependencias autom√°ticamente...")
        
        # Intentar instalar desde requirements.txt primero
        requirements_path = os.path.join(os.path.dirname(__file__), 'requirements.txt')
        if os.path.exists(requirements_path):
            try:
                print("üìÑ Instalando desde requirements.txt...")
                subprocess.check_call([sys.executable, "-m", "pip", "install", "-r", requirements_path])
                print("‚úÖ Dependencias instaladas desde requirements.txt")
                return True
            except subprocess.CalledProcessError:
                print("‚ö†Ô∏è Error al instalar desde requirements.txt, instalando individualmente...")
        
        # Instalar individualmente si falla requirements.txt
        for paquete in dependencias_faltantes:
            if not instalar_dependencia(paquete):
                print(f"‚ùå No se pudo instalar {paquete}")
                return False
        
        print("‚úÖ Todas las dependencias instaladas correctamente")
    else:
        print("‚úÖ Todas las dependencias est√°n disponibles")
    
    return True

def debug_print(mensaje):
    """Imprimir mensaje de debug"""
    print(f"[APP] {mensaje}")

def main():
    """Funci√≥n principal del sistema - Con instalaci√≥n autom√°tica de dependencias"""
    print("üåæ === SISTEMA FINCA DIRECTA SAS ===")
    print("üìã Verificando e instalando dependencias...")
    
    # Verificar e instalar dependencias autom√°ticamente
    if not verificar_e_instalar_dependencias():
        print("‚ùå Error al instalar dependencias")
        input("Presiona Enter para salir...")
        sys.exit(1)
    
    print("\nüöÄ Iniciando aplicaci√≥n...")
    debug_print("Iniciando Sistema Finca Directa SAS...")
    
    try:
        # Primer intento: Estructura modular (igual que debug_app.py)
        debug_print("Intentando importar estructura modular...")
        sys.path.append(os.path.join(os.path.dirname(__file__), 'gui'))
        sys.path.append(os.path.join(os.path.dirname(__file__), 'core'))
        sys.path.append(os.path.join(os.path.dirname(__file__), 'utils'))
        
        from gui.finca_directa_gui import SistemaFincaDirectaGUI
        debug_print("‚úÖ Importaci√≥n modular exitosa")
        
        app = SistemaFincaDirectaGUI()
        debug_print("‚úÖ Instancia creada correctamente")
        
        app.inicializar_aplicacion()
        debug_print("‚úÖ Aplicaci√≥n inicializada")
        
    except Exception as e:
        debug_print(f"‚ùå Error en estructura modular: {e}")
        
        try:
            # Segundo intento: fincaDirectaGUI.py directo
            debug_print("Intentando importar fincaDirectaGUI.py...")
            from fincaDirectaGUI import SistemaFincaDirectaGUI
            debug_print("‚úÖ Importaci√≥n de fincaDirectaGUI exitosa")
            
            app = SistemaFincaDirectaGUI()
            debug_print("‚úÖ Instancia creada correctamente")
            
            app.inicializar_aplicacion()
            debug_print("‚úÖ Aplicaci√≥n inicializada")
            
        except Exception as e2:
            debug_print(f"‚ùå Error en fincaDirectaGUI: {e2}")
            
            try:
                # Tercer intento: intento_moderno.py (si existe)
                debug_print("Intentando importar intento_moderno.py...")
                from intento_moderno import SistemaFincaDirectaGUI
                debug_print("‚úÖ Importaci√≥n de intento_moderno exitosa")
                
                app = SistemaFincaDirectaGUI()
                debug_print("‚úÖ Instancia creada correctamente")
                
                app.inicializar_aplicacion()
                debug_print("‚úÖ Aplicaci√≥n inicializada")
                
            except Exception as e3:
                debug_print(f"‚ùå Error en intento_moderno: {e3}")
                
                # √öltimo intento: intento.py b√°sico (si existe)
                debug_print("Intentando ejecutar intento.py b√°sico...")
                try:
                    import intento
                    debug_print("‚úÖ intento.py ejecutado")
                except Exception as e4:
                    debug_print(f"‚ùå Error en intento.py: {e4}")
                    
                    # Mostrar mensaje de error final
                    print("\n‚ùå ERROR CR√çTICO:")
                    print(f"   Modular: {e}")
                    print(f"   FincaDirectaGUI: {e2}")
                    print(f"   IntentoModerno: {e3}")
                    print(f"   Intento b√°sico: {e4}")
                    print("\nüí° Sugerencias:")
                    print("   1. Verifica que fincaDirectaGUI.py est√© en el directorio")
                    print("   2. Verifica que main.py est√© disponible")
                    print("   3. Ejecuta: python fincaDirectaGUI.py directamente")
                    
                    try:
                        messagebox.showerror("Error Cr√≠tico", 
                                           f"No se pudo ejecutar ninguna versi√≥n de la aplicaci√≥n.\n\n"
                                           f"Errores encontrados:\n"
                                           f"‚Ä¢ Modular: {str(e)[:50]}...\n"
                                           f"‚Ä¢ FincaDirectaGUI: {str(e2)[:50]}...\n"
                                           f"‚Ä¢ IntentoModerno: {str(e3)[:50]}...\n"
                                           f"‚Ä¢ Intento b√°sico: {str(e4)[:50]}...")
                    except:
                        pass
                    
                    input("Presiona Enter para salir...")
                    sys.exit(1)

if __name__ == "__main__":
    debug_print("=== INICIO DE APP ===")
    main()
    debug_print("=== FIN DE APP ===")
